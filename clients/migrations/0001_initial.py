# Generated by Django 4.0.4 on 2022-09-06 12:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Expense No:')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Name')),
                ('notes', django_cryptography.fields.encrypt(models.TextField(blank=True, null=True, verbose_name='Notes'))),
            ],
            options={
                'verbose_name': 'Expense',
                'verbose_name_plural': 'Expenses',
            },
        ),
        migrations.CreateModel(
            name='FraudDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Month', models.IntegerField(choices=[(1, 'Jan'), (2, 'Feb'), (3, 'Mar'), (4, 'Apr'), (5, 'May'), (6, 'Jun'), (7, 'Jul'), (8, 'Aug'), (9, 'Sep'), (10, 'Oct'), (11, 'Nov'), (12, 'Dec')])),
                ('WeekOfMonth', models.IntegerField()),
                ('DayOfWeek', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('Make', models.IntegerField(choices=[(1, 'Honda'), (2, 'Toyota'), (3, 'Bmw'), (4, 'Vw'), (5, 'Mazda'), (6, 'Mecedes'), (7, 'Nisson'), (8, 'Ford'), (9, 'Chevrolet'), (10, 'Jaguar'), (11, 'Lexus'), (12, 'Other')])),
                ('AccidentArea', models.IntegerField(choices=[(1, 'Urban'), (0, 'Rural')])),
                ('DayOfWeekClaimed', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('MonthClaimed', models.IntegerField(choices=[(1, 'Jan'), (2, 'Feb'), (3, 'Mar'), (4, 'Apr'), (5, 'May'), (6, 'Jun'), (7, 'Jul'), (8, 'Aug'), (9, 'Sep'), (10, 'Oct'), (11, 'Nov'), (12, 'Dec')])),
                ('WeekOfMonthClaimed', models.IntegerField()),
                ('Sex', models.IntegerField(choices=[(1, 'Female'), (0, 'Male')])),
                ('MaritalStatus', models.IntegerField(choices=[(1, 'Married'), (2, 'Single'), (3, 'Widow'), (4, 'Divorced')])),
                ('Age', models.IntegerField()),
                ('Fault', models.IntegerField(choices=[(1, 'Policy Holder'), (0, 'Third Party')])),
                ('PolicyType', models.IntegerField(choices=[(1, 'Sedan All Perils'), (2, 'Sedan Collision'), (3, 'Sedan Liability'), (4, 'Sport All Perils'), (5, 'Sport Collision'), (6, 'Sport Liability'), (7, 'Utility All Perils'), (8, 'Utility Collision'), (9, 'Utility Liability'), (10, 'Other')])),
                ('VehicleCategory', models.IntegerField(choices=[(1, 'Sedan'), (2, 'Sport'), (3, 'Utility'), (4, 'Other')])),
                ('VehiclePrice', models.IntegerField(choices=[(19999, 'Less Than 20000'), (24500, 'Around 20000'), (34500, 'Around 30000'), (69001, 'More Than 69000'), (49500, 'Between 40000 To 59000'), (64500, 'Around 60000')])),
                ('PolicyNumber', models.IntegerField()),
                ('RepNumber', models.IntegerField()),
                ('Deductible', models.FloatField()),
                ('DriverRating', models.IntegerField()),
                ('Days_Policy_Accident', models.IntegerField(choices=[(4, 'Less Than 7'), (11, 'More Than 8'), (22, 'More Than 15'), (31, 'More Than 30')])),
                ('AgeOfVehicle', models.IntegerField(choices=[(0, 'New'), (2, 'Two Years'), (3, 'Three Years'), (4, 'Four Years'), (5, 'Five Years'), (6, 'Six Years'), (7, 'Seven Years'), (8, 'More Than Seven Years')])),
                ('PoliceReportFiled', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')])),
                ('WitnessPresent', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')])),
                ('AgentType', models.IntegerField(choices=[(0, 'Internal'), (1, 'External')])),
                ('NumberOfCars', models.IntegerField(choices=[(1, 'One Vehicle'), (2, 'Two Vehicle'), (4, 'Three To Four'), (7, 'Five To Eight'), (9, 'More Than Eight')])),
                ('Year', models.IntegerField()),
                ('FraudFound_P', models.IntegerField(choices=[(0, 'Fraudulent'), (1, 'Legitemate')])),
            ],
            options={
                'verbose_name': 'Claim Policy',
                'verbose_name_plural': 'Claim Policies',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Policy Number')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Name')),
                ('category', django_cryptography.fields.encrypt(models.CharField(choices=[('Life Cover', 'Life Cover'), ('Motor', 'Motor'), ('House', 'House'), ('Business', 'Business')], max_length=200, null=True))),
                ('price', models.IntegerField()),
            ],
            options={
                'verbose_name': 'subscription plan',
                'verbose_name_plural': 'subscription plans',
            },
        ),
        migrations.CreateModel(
            name='subscriptionfeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django_cryptography.fields.encrypt(models.CharField(max_length=150))),
                ('product', models.ManyToManyField(to='clients.product')),
            ],
            options={
                'verbose_name': 'subscription feature',
                'verbose_name_plural': 'subscription features',
            },
        ),
        migrations.CreateModel(
            name='SalesLineTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, verbose_name='Policy Number')),
                ('transaction_date', models.DateTimeField(db_index=True, verbose_name='Date')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=19, verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=19, verbose_name='Price')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=19, verbose_name='Total Amount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.product')),
            ],
            options={
                'verbose_name': 'Sale Transaction',
                'verbose_name_plural': 'Sales Transactions',
            },
        ),
        migrations.CreateModel(
            name='Insurance_subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', django_cryptography.fields.encrypt(models.FloatField(max_length=50))),
                ('reg_date', django_cryptography.fields.encrypt(models.DateField(auto_now_add=True, null=True))),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='ExpenseTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, verbose_name='Exp Invoice No:')),
                ('transaction_date', models.DateTimeField(db_index=True, verbose_name='date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=19, verbose_name='Amount')),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.expense')),
            ],
            options={
                'verbose_name': 'Expense Transaction',
                'verbose_name_plural': 'Expense Transactions',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_months', models.IntegerField()),
                ('total_discount', models.IntegerField()),
                ('subscriptionPlan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.product')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, verbose_name='Code')),
                ('full_Names', django_cryptography.fields.encrypt(models.CharField(max_length=200, null=True))),
                ('mobile', django_cryptography.fields.encrypt(models.CharField(max_length=20))),
                ('address', django_cryptography.fields.encrypt(models.TextField())),
                ('img', django_cryptography.fields.encrypt(models.ImageField(null=True, upload_to='subs/'))),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
    ]
